<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<# if (GetInjectFields().Any()) { #>
using Microsoft.Extensions.DependencyInjection;
<# } #>

#nullable enable

namespace <#= _classItem.Namespace #>
{
	partial class <#= _classItem.ClassName #>
	{
		<# if (GetInjectFields().Any() || GetParameterFields().Any()) { #>
		public <#= _classItem.ClassName #>()
		{
			<# foreach (var fieldItem in GetInjectFields()) { #>
			<# if (fieldItem.FieldTypeFullyQualifiedName.EndsWith("?")) { #>
			<#= fieldItem.FieldName #> = Services.GetService<<#= fieldItem.FieldTypeFullyQualifiedName.TrimEnd('?') #>>();
			<# } else { #>
			<#= fieldItem.FieldName #> = Services.GetRequiredService<<#= fieldItem.FieldTypeFullyQualifiedName #>>();
			<# } #>
			<# } #>

			<# foreach (var fieldItem in GetParameterFields()) { #>
			<#= fieldItem.FieldName #> = GetOrCreateParameter<<#= fieldItem.FieldTypeFullyQualifiedName #>>();
			<# } #>
		}
		<# } #>

		<# foreach (var fieldItem in GetPropFields()) { #>
		public <#= _classItem.ClassName #> <#= fieldItem.GetPropMethodName() #>(<#= fieldItem.FieldTypeFullyQualifiedName #> propValue)
		{
			<#= fieldItem.FieldName #> = propValue;
			return this;
		}
		<# } #>
	}
}