<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using Microsoft.Extensions.DependencyInjection;

namespace <#= _classItem.Namespace #>
{
	partial class <#= _classItem.ClassName #>
	{
		<# if (GetInjectFields().Any()) { #>
		public <#= _classItem.ClassName #>()
		{
			<# foreach (var fieldItem in GetInjectFields()) { #>
			<#= fieldItem.FieldName #> = Services.GetRequiredService<<#= fieldItem.FieldTypeFullyQualifiedName #>>();
			<# } #>
		}
		<# } #>

		<# foreach (var fieldItem in GetPropFields()) { #>
		public <#= _classItem.ClassName #> <#= GetPropMethodName(fieldItem.FieldName) #>(<#= fieldItem.FieldTypeFullyQualifiedName #> propValue)
		{
			<#= fieldItem.FieldName #> = propValue;
			return this;
		}
		<# } #>
	}
}