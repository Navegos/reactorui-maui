// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Reflection;
using MauiReactor.Animations;
using MauiReactor.Shapes;
using MauiReactor.Internals;
using Microsoft.AspNetCore.Components.WebView;

#nullable enable
namespace MauiReactor
{
    public partial interface IBlazorWebView : IView
    {
        PropertyValue<string>? StartPath { get; set; }

        Action? UrlLoadingAction { get; set; }

        Action<object?, UrlLoadingEventArgs>? UrlLoadingActionWithArgs { get; set; }

        Action? BlazorWebViewInitializingAction { get; set; }

        Action<object?, BlazorWebViewInitializingEventArgs>? BlazorWebViewInitializingActionWithArgs { get; set; }

        Action? BlazorWebViewInitializedAction { get; set; }

        Action<object?, BlazorWebViewInitializedEventArgs>? BlazorWebViewInitializedActionWithArgs { get; set; }
    }

    public partial class BlazorWebView<T> : View<T>, IBlazorWebView where T : Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView, new()
    {
        public BlazorWebView()
        {
        }

        public BlazorWebView(Action<T?> componentRefAction) : base(componentRefAction)
        {
        }

        PropertyValue<string>? IBlazorWebView.StartPath { get; set; }

        Action? IBlazorWebView.UrlLoadingAction { get; set; }

        Action<object?, UrlLoadingEventArgs>? IBlazorWebView.UrlLoadingActionWithArgs { get; set; }

        Action? IBlazorWebView.BlazorWebViewInitializingAction { get; set; }

        Action<object?, BlazorWebViewInitializingEventArgs>? IBlazorWebView.BlazorWebViewInitializingActionWithArgs { get; set; }

        Action? IBlazorWebView.BlazorWebViewInitializedAction { get; set; }

        Action<object?, BlazorWebViewInitializedEventArgs>? IBlazorWebView.BlazorWebViewInitializedActionWithArgs { get; set; }

        protected override void OnUpdate()
        {
            OnBeginUpdate();
            Validate.EnsureNotNull(NativeControl);
            var thisAsIBlazorWebView = (IBlazorWebView)this;
            SetPropertyValue(NativeControl, Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView.StartPathProperty, thisAsIBlazorWebView.StartPath);
            base.OnUpdate();
            OnEndUpdate();
        }

        partial void OnBeginUpdate();
        partial void OnEndUpdate();
        partial void OnBeginAnimate();
        partial void OnEndAnimate();
        partial void OnAttachingNativeEvents();
        partial void OnDetachingNativeEvents();
        protected override void OnAttachNativeEvents()
        {
            Validate.EnsureNotNull(NativeControl);
            var thisAsIBlazorWebView = (IBlazorWebView)this;
            if (thisAsIBlazorWebView.UrlLoadingAction != null || thisAsIBlazorWebView.UrlLoadingActionWithArgs != null)
            {
                NativeControl.UrlLoading += NativeControl_UrlLoading;
            }

            if (thisAsIBlazorWebView.BlazorWebViewInitializingAction != null || thisAsIBlazorWebView.BlazorWebViewInitializingActionWithArgs != null)
            {
                NativeControl.BlazorWebViewInitializing += NativeControl_BlazorWebViewInitializing;
            }

            if (thisAsIBlazorWebView.BlazorWebViewInitializedAction != null || thisAsIBlazorWebView.BlazorWebViewInitializedActionWithArgs != null)
            {
                NativeControl.BlazorWebViewInitialized += NativeControl_BlazorWebViewInitialized;
            }

            OnAttachingNativeEvents();
            base.OnAttachNativeEvents();
        }

        private void NativeControl_UrlLoading(object? sender, UrlLoadingEventArgs e)
        {
            var thisAsIBlazorWebView = (IBlazorWebView)this;
            thisAsIBlazorWebView.UrlLoadingAction?.Invoke();
            thisAsIBlazorWebView.UrlLoadingActionWithArgs?.Invoke(sender, e);
        }

        private void NativeControl_BlazorWebViewInitializing(object? sender, BlazorWebViewInitializingEventArgs e)
        {
            var thisAsIBlazorWebView = (IBlazorWebView)this;
            thisAsIBlazorWebView.BlazorWebViewInitializingAction?.Invoke();
            thisAsIBlazorWebView.BlazorWebViewInitializingActionWithArgs?.Invoke(sender, e);
        }

        private void NativeControl_BlazorWebViewInitialized(object? sender, BlazorWebViewInitializedEventArgs e)
        {
            var thisAsIBlazorWebView = (IBlazorWebView)this;
            thisAsIBlazorWebView.BlazorWebViewInitializedAction?.Invoke();
            thisAsIBlazorWebView.BlazorWebViewInitializedActionWithArgs?.Invoke(sender, e);
        }

        protected override void OnDetachNativeEvents()
        {
            if (NativeControl != null)
            {
                NativeControl.UrlLoading -= NativeControl_UrlLoading;
                NativeControl.BlazorWebViewInitializing -= NativeControl_BlazorWebViewInitializing;
                NativeControl.BlazorWebViewInitialized -= NativeControl_BlazorWebViewInitialized;
            }

            OnDetachingNativeEvents();
            base.OnDetachNativeEvents();
        }
    }

    public partial class BlazorWebView : BlazorWebView<Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView>
    {
        public BlazorWebView()
        {
        }

        public BlazorWebView(Action<Microsoft.AspNetCore.Components.WebView.Maui.BlazorWebView?> componentRefAction) : base(componentRefAction)
        {
        }
    }

    public static partial class BlazorWebViewExtensions
    {
        public static T StartPath<T>(this T blazorWebView, string startPath)
            where T : IBlazorWebView
        {
            blazorWebView.StartPath = new PropertyValue<string>(startPath);
            return blazorWebView;
        }

        public static T StartPath<T>(this T blazorWebView, Func<string> startPathFunc)
            where T : IBlazorWebView
        {
            blazorWebView.StartPath = new PropertyValue<string>(startPathFunc);
            return blazorWebView;
        }

        public static T OnUrlLoading<T>(this T blazorWebView, Action? urlLoadingAction)
            where T : IBlazorWebView
        {
            blazorWebView.UrlLoadingAction = urlLoadingAction;
            return blazorWebView;
        }

        public static T OnUrlLoading<T>(this T blazorWebView, Action<object?, UrlLoadingEventArgs>? urlLoadingActionWithArgs)
            where T : IBlazorWebView
        {
            blazorWebView.UrlLoadingActionWithArgs = urlLoadingActionWithArgs;
            return blazorWebView;
        }

        public static T OnBlazorWebViewInitializing<T>(this T blazorWebView, Action? blazorWebViewInitializingAction)
            where T : IBlazorWebView
        {
            blazorWebView.BlazorWebViewInitializingAction = blazorWebViewInitializingAction;
            return blazorWebView;
        }

        public static T OnBlazorWebViewInitializing<T>(this T blazorWebView, Action<object?, BlazorWebViewInitializingEventArgs>? blazorWebViewInitializingActionWithArgs)
            where T : IBlazorWebView
        {
            blazorWebView.BlazorWebViewInitializingActionWithArgs = blazorWebViewInitializingActionWithArgs;
            return blazorWebView;
        }

        public static T OnBlazorWebViewInitialized<T>(this T blazorWebView, Action? blazorWebViewInitializedAction)
            where T : IBlazorWebView
        {
            blazorWebView.BlazorWebViewInitializedAction = blazorWebViewInitializedAction;
            return blazorWebView;
        }

        public static T OnBlazorWebViewInitialized<T>(this T blazorWebView, Action<object?, BlazorWebViewInitializedEventArgs>? blazorWebViewInitializedActionWithArgs)
            where T : IBlazorWebView
        {
            blazorWebView.BlazorWebViewInitializedActionWithArgs = blazorWebViewInitializedActionWithArgs;
            return blazorWebView;
        }
    }
}