using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.CSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MauiReactor.Scaffold;

public partial class ComponentTypeGenerator
{
    private readonly Type[] _typesScaffolded;

    public ComponentTypeGenerator(IEnumerable<Type> typesScaffolded)
    {
        _typesScaffolded = typesScaffolded
            .Where(_ => !_.IsAbstract && _.GetConstructor([]) != null && !_.IsGenericType)
            .ToArray();
    }



    public string TransformAndPrettify()
    {
        var tree = CSharpSyntaxTree.ParseText(TransformText());
        var root = tree.GetRoot().NormalizeWhitespace();
        var ret = root.ToFullString();
        return $"// <auto-generated />{Environment.NewLine}{ret}";
    }
}
