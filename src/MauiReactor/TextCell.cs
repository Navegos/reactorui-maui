// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Reflection;
using MauiReactor.Animations;
using MauiReactor.Shapes;
using MauiReactor.Internals;

#nullable enable
namespace MauiReactor;
public partial interface ITextCell : ICell
{
    object? Text { get; set; }

    object? Detail { get; set; }

    object? TextColor { get; set; }

    object? DetailColor { get; set; }
}

public partial class TextCell<T> : Cell<T>, ITextCell where T : Microsoft.Maui.Controls.TextCell, new()
{
    public TextCell()
    {
    }

    public TextCell(Action<T?> componentRefAction) : base(componentRefAction)
    {
    }

    object? ITextCell.Text { get; set; }

    object? ITextCell.Detail { get; set; }

    object? ITextCell.TextColor { get; set; }

    object? ITextCell.DetailColor { get; set; }

    internal override void Reset()
    {
        base.Reset();
        var thisAsITextCell = (ITextCell)this;
        thisAsITextCell.Text = null;
        thisAsITextCell.Detail = null;
        thisAsITextCell.TextColor = null;
        thisAsITextCell.DetailColor = null;
        OnReset();
    }

    partial void OnReset();
    protected override void OnUpdate()
    {
        OnBeginUpdate();
        Validate.EnsureNotNull(NativeControl);
        var thisAsITextCell = (ITextCell)this;
        SetPropertyValue(NativeControl, Microsoft.Maui.Controls.TextCell.TextProperty, thisAsITextCell.Text);
        SetPropertyValue(NativeControl, Microsoft.Maui.Controls.TextCell.DetailProperty, thisAsITextCell.Detail);
        SetPropertyValue(NativeControl, Microsoft.Maui.Controls.TextCell.TextColorProperty, thisAsITextCell.TextColor);
        SetPropertyValue(NativeControl, Microsoft.Maui.Controls.TextCell.DetailColorProperty, thisAsITextCell.DetailColor);
        base.OnUpdate();
        OnEndUpdate();
    }

    partial void OnBeginUpdate();
    partial void OnEndUpdate();
    partial void OnBeginAnimate();
    partial void OnEndAnimate();
}

public partial class TextCell : TextCell<Microsoft.Maui.Controls.TextCell>
{
    public TextCell()
    {
    }

    public TextCell(Action<Microsoft.Maui.Controls.TextCell?> componentRefAction) : base(componentRefAction)
    {
    }
}

public static partial class TextCellExtensions
{
    public static T Text<T>(this T textCell, string text)
        where T : ITextCell
    {
        textCell.Text = text;
        return textCell;
    }

    public static T Text<T>(this T textCell, Func<string> textFunc)
        where T : ITextCell
    {
        textCell.Text = new PropertyValue<string>(textFunc);
        return textCell;
    }

    public static T Detail<T>(this T textCell, string detail)
        where T : ITextCell
    {
        textCell.Detail = detail;
        return textCell;
    }

    public static T Detail<T>(this T textCell, Func<string> detailFunc)
        where T : ITextCell
    {
        textCell.Detail = new PropertyValue<string>(detailFunc);
        return textCell;
    }

    public static T TextColor<T>(this T textCell, Microsoft.Maui.Graphics.Color textColor)
        where T : ITextCell
    {
        textCell.TextColor = textColor;
        return textCell;
    }

    public static T TextColor<T>(this T textCell, Func<Microsoft.Maui.Graphics.Color> textColorFunc)
        where T : ITextCell
    {
        textCell.TextColor = new PropertyValue<Microsoft.Maui.Graphics.Color>(textColorFunc);
        return textCell;
    }

    public static T DetailColor<T>(this T textCell, Microsoft.Maui.Graphics.Color detailColor)
        where T : ITextCell
    {
        textCell.DetailColor = detailColor;
        return textCell;
    }

    public static T DetailColor<T>(this T textCell, Func<Microsoft.Maui.Graphics.Color> detailColorFunc)
        where T : ITextCell
    {
        textCell.DetailColor = new PropertyValue<Microsoft.Maui.Graphics.Color>(detailColorFunc);
        return textCell;
    }
}