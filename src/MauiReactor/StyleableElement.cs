// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Reflection;
using MauiReactor.Animations;
using MauiReactor.Shapes;
using MauiReactor.Internals;

#nullable enable
namespace MauiReactor;
public partial interface IStyleableElement : IElement
{
    object? Style { get; set; }
}

public abstract partial class StyleableElement<T> : Element<T>, IStyleableElement where T : Microsoft.Maui.Controls.StyleableElement, new()
{
    protected StyleableElement()
    {
        StyleableElementStyles.Default?.Invoke(this);
    }

    protected StyleableElement(Action<T?> componentRefAction) : base(componentRefAction)
    {
        StyleableElementStyles.Default?.Invoke(this);
    }

    object? IStyleableElement.Style { get; set; }

    internal override void Reset()
    {
        base.Reset();
        var thisAsIStyleableElement = (IStyleableElement)this;
        thisAsIStyleableElement.Style = null;
        OnReset();
    }

    partial void OnReset();
    protected override void OnUpdate()
    {
        OnBeginUpdate();
        Validate.EnsureNotNull(NativeControl);
        var thisAsIStyleableElement = (IStyleableElement)this;
        SetPropertyValue(NativeControl, Microsoft.Maui.Controls.StyleableElement.StyleProperty, thisAsIStyleableElement.Style);
        base.OnUpdate();
        OnEndUpdate();
    }

    partial void OnBeginUpdate();
    partial void OnEndUpdate();
    partial void OnBeginAnimate();
    partial void OnEndAnimate();
    protected override void OnThemeChanged()
    {
        if (ThemeKey != null && StyleableElementStyles.Themes.TryGetValue(ThemeKey, out var styleAction))
        {
            styleAction(this);
        }

        base.OnThemeChanged();
    }
}

public static partial class StyleableElementExtensions
{
    public static T Style<T>(this T styleableElement, Microsoft.Maui.Controls.Style style)
        where T : IStyleableElement
    {
        styleableElement.Style = style;
        return styleableElement;
    }

    public static T Style<T>(this T styleableElement, Func<Microsoft.Maui.Controls.Style> styleFunc)
        where T : IStyleableElement
    {
        styleableElement.Style = new PropertyValue<Microsoft.Maui.Controls.Style>(styleFunc);
        return styleableElement;
    }
}

public static partial class StyleableElementStyles
{
    public static Action<IStyleableElement>? Default { get; set; }
    public static Dictionary<string, Action<IStyleableElement>> Themes { get; } = [];
}