// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Reflection;
using MauiReactor.Animations;
using MauiReactor.Shapes;
using MauiReactor.Internals;

#nullable enable
namespace MauiReactor;
public partial interface IStructuredItemsView : IItemsView
{
    object? ItemSizingStrategy { get; set; }
}

public partial class StructuredItemsView<T> : ItemsView<T>, IStructuredItemsView where T : Microsoft.Maui.Controls.StructuredItemsView, new()
{
    public StructuredItemsView()
    {
        StructuredItemsViewStyles.Default?.Invoke(this);
    }

    public StructuredItemsView(Action<T?> componentRefAction) : base(componentRefAction)
    {
        StructuredItemsViewStyles.Default?.Invoke(this);
    }

    object? IStructuredItemsView.ItemSizingStrategy { get; set; }

    internal override void Reset()
    {
        base.Reset();
        var thisAsIStructuredItemsView = (IStructuredItemsView)this;
        thisAsIStructuredItemsView.ItemSizingStrategy = null;
        OnReset();
    }

    partial void OnReset();
    protected override void OnUpdate()
    {
        OnBeginUpdate();
        Validate.EnsureNotNull(NativeControl);
        var thisAsIStructuredItemsView = (IStructuredItemsView)this;
        SetPropertyValue(NativeControl, Microsoft.Maui.Controls.StructuredItemsView.ItemSizingStrategyProperty, thisAsIStructuredItemsView.ItemSizingStrategy);
        base.OnUpdate();
        OnEndUpdate();
    }

    partial void OnBeginUpdate();
    partial void OnEndUpdate();
    partial void OnBeginAnimate();
    partial void OnEndAnimate();
    protected override void OnThemeChanged()
    {
        if (ThemeKey != null && StructuredItemsViewStyles.Themes.TryGetValue(ThemeKey, out var styleAction))
        {
            styleAction(this);
        }

        base.OnThemeChanged();
    }
}

public partial class StructuredItemsView : StructuredItemsView<Microsoft.Maui.Controls.StructuredItemsView>
{
    public StructuredItemsView()
    {
    }

    public StructuredItemsView(Action<Microsoft.Maui.Controls.StructuredItemsView?> componentRefAction) : base(componentRefAction)
    {
    }
}

public static partial class StructuredItemsViewExtensions
{
    public static T ItemSizingStrategy<T>(this T structuredItemsView, Microsoft.Maui.Controls.ItemSizingStrategy itemSizingStrategy)
        where T : IStructuredItemsView
    {
        structuredItemsView.ItemSizingStrategy = itemSizingStrategy;
        return structuredItemsView;
    }

    public static T ItemSizingStrategy<T>(this T structuredItemsView, Func<Microsoft.Maui.Controls.ItemSizingStrategy> itemSizingStrategyFunc)
        where T : IStructuredItemsView
    {
        structuredItemsView.ItemSizingStrategy = new PropertyValue<Microsoft.Maui.Controls.ItemSizingStrategy>(itemSizingStrategyFunc);
        return structuredItemsView;
    }
}

public static partial class StructuredItemsViewStyles
{
    public static Action<IStructuredItemsView>? Default { get; set; }
    public static Dictionary<string, Action<IStructuredItemsView>> Themes { get; } = [];
}