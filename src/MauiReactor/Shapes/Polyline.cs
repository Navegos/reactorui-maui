// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Reflection;
using MauiReactor.Animations;
using MauiReactor.Shapes;
using MauiReactor.Internals;

#nullable enable
namespace MauiReactor.Shapes;
public partial interface IPolyline : Shapes.IShape
{
    object? Points { get; set; }

    object? FillRule { get; set; }
}

public sealed partial class Polyline : Shapes.Shape<Microsoft.Maui.Controls.Shapes.Polyline>, IPolyline
{
    public Polyline()
    {
        PolylineStyles.Default?.Invoke(this);
    }

    public Polyline(Action<Microsoft.Maui.Controls.Shapes.Polyline?> componentRefAction) : base(componentRefAction)
    {
        PolylineStyles.Default?.Invoke(this);
    }

    object? IPolyline.Points { get; set; }

    object? IPolyline.FillRule { get; set; }

    internal override void Reset()
    {
        base.Reset();
        var thisAsIPolyline = (IPolyline)this;
        thisAsIPolyline.Points = null;
        thisAsIPolyline.FillRule = null;
        OnReset();
    }

    partial void OnReset();
    protected override void OnUpdate()
    {
        OnBeginUpdate();
        Validate.EnsureNotNull(NativeControl);
        var thisAsIPolyline = (IPolyline)this;
        SetPropertyValue(NativeControl, Microsoft.Maui.Controls.Shapes.Polyline.PointsProperty, thisAsIPolyline.Points);
        SetPropertyValue(NativeControl, Microsoft.Maui.Controls.Shapes.Polyline.FillRuleProperty, thisAsIPolyline.FillRule);
        base.OnUpdate();
        OnEndUpdate();
    }

    partial void OnBeginUpdate();
    partial void OnEndUpdate();
    partial void OnBeginAnimate();
    partial void OnEndAnimate();
    protected override void OnThemeChanged()
    {
        if (Theme != null && PolylineStyles.Themes.TryGetValue(Theme, out var styleAction))
        {
            styleAction(this);
        }

        base.OnThemeChanged();
    }
}

public static partial class PolylineExtensions
{
    public static T Points<T>(this T polyline, Microsoft.Maui.Controls.PointCollection points)
        where T : IPolyline
    {
        polyline.Points = points;
        return polyline;
    }

    public static T Points<T>(this T polyline, Func<Microsoft.Maui.Controls.PointCollection> pointsFunc)
        where T : IPolyline
    {
        polyline.Points = new PropertyValue<Microsoft.Maui.Controls.PointCollection>(pointsFunc);
        return polyline;
    }

    public static T FillRule<T>(this T polyline, Microsoft.Maui.Controls.Shapes.FillRule fillRule)
        where T : IPolyline
    {
        polyline.FillRule = fillRule;
        return polyline;
    }

    public static T FillRule<T>(this T polyline, Func<Microsoft.Maui.Controls.Shapes.FillRule> fillRuleFunc)
        where T : IPolyline
    {
        polyline.FillRule = new PropertyValue<Microsoft.Maui.Controls.Shapes.FillRule>(fillRuleFunc);
        return polyline;
    }
}

public static partial class PolylineStyles
{
    public static Action<IPolyline>? Default { get; set; }
    public static Dictionary<string, Action<IPolyline>> Themes { get; } = [];
}