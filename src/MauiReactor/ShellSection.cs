// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Reflection;
using MauiReactor.Animations;
using MauiReactor.Shapes;
using MauiReactor.Internals;

#nullable enable
namespace MauiReactor;
public partial interface IShellSection : IShellGroupItem
{
}

public partial class ShellSection<T> : ShellGroupItem<T>, IShellSection where T : Microsoft.Maui.Controls.ShellSection, new()
{
    public ShellSection()
    {
        ShellSectionStyles.Default?.Invoke(this);
    }

    public ShellSection(Action<T?> componentRefAction) : base(componentRefAction)
    {
        ShellSectionStyles.Default?.Invoke(this);
    }

    internal override void Reset()
    {
        base.Reset();
        OnReset();
    }

    partial void OnReset();
    protected override void OnUpdate()
    {
        OnBeginUpdate();
        base.OnUpdate();
        OnEndUpdate();
    }

    partial void OnBeginUpdate();
    partial void OnEndUpdate();
    partial void OnBeginAnimate();
    partial void OnEndAnimate();
    protected override void OnThemeChanged()
    {
        if (Theme != null && ShellSectionStyles.Themes.TryGetValue(Theme, out var styleAction))
        {
            styleAction(this);
        }

        base.OnThemeChanged();
    }
}

public partial class ShellSection : ShellSection<Microsoft.Maui.Controls.ShellSection>
{
    public ShellSection()
    {
    }

    public ShellSection(Action<Microsoft.Maui.Controls.ShellSection?> componentRefAction) : base(componentRefAction)
    {
    }
}

public static partial class ShellSectionExtensions
{
}

public static partial class ShellSectionStyles
{
    public static Action<IShellSection>? Default { get; set; }
    public static Dictionary<string, Action<IShellSection>> Themes { get; } = [];
}